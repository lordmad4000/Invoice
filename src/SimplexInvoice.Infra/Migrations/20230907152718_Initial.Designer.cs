// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimplexInvoice.Infra.Data;

#nullable disable

namespace SimplexInvoice.Infra.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20230907152718_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SimplexInvoice.Domain.Companies.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("IdDocumentNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("IdDocumentTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("IdDocumentTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Company");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("IdDocumentNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("IdDocumentTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("IdDocumentTypeId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.IdDocumentTypes.IdDocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("IdDocumentType");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Invoices.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CompanyDocumentNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("CompanyIdDocumentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("CustomerDocumentNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("CustomerFullName")
                        .IsRequired()
                        .HasMaxLength(81)
                        .HasColumnType("varchar(81)");

                    b.Property<string>("CustomerIdDocumentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasDefaultValue("");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Invoices.InvoiceLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("char(36)");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<int>("Packages")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<double>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TaxRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLine");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<double>("PackageQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("ProductTaxRateId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProductTaxRateId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.TaxRates.TaxRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TaxRate");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Companies.Company", b =>
                {
                    b.HasOne("SimplexInvoice.Domain.IdDocumentTypes.IdDocumentType", "IdDocumentType")
                        .WithMany()
                        .HasForeignKey("IdDocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("Country");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("Street");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Company");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.EmailAddress", "EmailAddress", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("CompanyId");

                            b1.HasIndex("Address")
                                .IsUnique();

                            b1.ToTable("Company");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.PhoneNumber", "Phone", b1 =>
                        {
                            b1.Property<Guid>("CompanyId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("Phone");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Company");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("EmailAddress")
                        .IsRequired();

                    b.Navigation("IdDocumentType");

                    b.Navigation("Phone")
                        .IsRequired();
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Customers.Customer", b =>
                {
                    b.HasOne("SimplexInvoice.Domain.IdDocumentTypes.IdDocumentType", "IdDocumentType")
                        .WithMany()
                        .HasForeignKey("IdDocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("Country");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("Street");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.EmailAddress", "EmailAddress", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("CustomerId");

                            b1.HasIndex("Address")
                                .IsUnique();

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.PhoneNumber", "Phone", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("Phone");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("EmailAddress")
                        .IsRequired();

                    b.Navigation("IdDocumentType");

                    b.Navigation("Phone")
                        .IsRequired();
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Invoices.Invoice", b =>
                {
                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.Address", "CompanyAddress", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CompanyCity");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CompanyCountry");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CompanyPostalCode");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CompanyState");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CompanyStreet");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.EmailAddress", "CompanyEmailAddress", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CompanyEmailAddress");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.PhoneNumber", "CompanyPhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CompanyPhone");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.Address", "CustomerAddress", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CustomerCity");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CustomerCountry");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CustomerPostalCode");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CustomerState");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CustomerStreet");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.EmailAddress", "CustomerEmailAddress", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CustomerEmailAddress");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.PhoneNumber", "CustomerPhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("InvoiceId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("CustomerPhone");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoice");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.Navigation("CompanyAddress")
                        .IsRequired();

                    b.Navigation("CompanyEmailAddress")
                        .IsRequired();

                    b.Navigation("CompanyPhoneNumber")
                        .IsRequired();

                    b.Navigation("CustomerAddress")
                        .IsRequired();

                    b.Navigation("CustomerEmailAddress")
                        .IsRequired();

                    b.Navigation("CustomerPhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Invoices.InvoiceLine", b =>
                {
                    b.HasOne("SimplexInvoice.Domain.Invoices.Invoice", null)
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("InvoiceLineId")
                                .HasColumnType("char(36)");

                            b1.Property<double>("Amount")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("double")
                                .HasDefaultValue(0.0)
                                .HasColumnName("Price");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("varchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Currency");

                            b1.HasKey("InvoiceLineId");

                            b1.ToTable("InvoiceLine");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceLineId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Products.Product", b =>
                {
                    b.HasOne("SimplexInvoice.Domain.TaxRates.TaxRate", "ProductTaxRate")
                        .WithMany()
                        .HasForeignKey("ProductTaxRateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.Money", "UnitPrice", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("char(36)");

                            b1.Property<double>("Amount")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("double")
                                .HasDefaultValue(0.0)
                                .HasColumnName("UnitPrice");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("varchar(3)")
                                .HasDefaultValue("EUR")
                                .HasColumnName("Currency");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("ProductTaxRate");

                    b.Navigation("UnitPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Users.User", b =>
                {
                    b.OwnsOne("SimplexInvoice.Domain.ValueObjects.EmailAddress", "EmailAddress", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("EmailAddress");

                            b1.HasKey("UserId");

                            b1.HasIndex("Address")
                                .IsUnique();

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("EmailAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("SimplexInvoice.Domain.Invoices.Invoice", b =>
                {
                    b.Navigation("InvoiceLines");
                });
#pragma warning restore 612, 618
        }
    }
}
