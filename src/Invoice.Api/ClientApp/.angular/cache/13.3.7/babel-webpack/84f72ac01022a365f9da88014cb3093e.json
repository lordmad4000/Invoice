{"ast":null,"code":"import { PopupComponent } from \"../components/popup/popup.component\";\nimport { GlobalConstants } from \"../const/global-constants\";\nimport { PopupButton } from \"../models/popup-button\";\nimport { PopupProperties } from \"../models/popup-properties\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport let PopupService = /*#__PURE__*/(() => {\n  class PopupService {\n    constructor(dialog, zone) {\n      this.dialog = dialog;\n      this.zone = zone;\n    }\n\n    openCustomDialog(popupProperties) {\n      const dialogRef = this.dialog.open(PopupComponent, {\n        width: popupProperties.width ? popupProperties.width : GlobalConstants.customWidthPopup,\n        height: popupProperties.height ? popupProperties.height : GlobalConstants.customHeightPopup,\n        data: {\n          title: popupProperties.title,\n          message: popupProperties.message,\n          actions: popupProperties.actions\n        }\n      });\n      return dialogRef;\n    }\n\n    createConfirmPopup(msg) {\n      const popConfirm = new PopupProperties(\"REMOVE\", msg, \"400px\", \"auto\");\n      const buttonNo = new PopupButton(\"NO\", GlobalConstants.popupNoValue);\n      const buttonYes = new PopupButton(\"SI\", GlobalConstants.popupYesValue);\n      popConfirm.actions = [];\n      popConfirm.actions.push(buttonNo);\n      popConfirm.actions.push(buttonYes);\n      return this.openCustomDialog(popConfirm);\n    }\n\n    openPopupAceptar(titulo, msg, width, height) {\n      const popupSettings = new PopupProperties(titulo, msg, width, height);\n      const buttonAceptar = new PopupButton(\"ACEPTAR\", GlobalConstants.popupConfirmValue);\n      popupSettings.actions = [];\n      popupSettings.actions.push(buttonAceptar);\n      return this.openCustomDialog(popupSettings);\n    }\n\n    createInformativePopup(msg) {\n      const popInfo = new PopupProperties(\"POPUP.INFORMACION\", msg, \"500px\", \"auto\");\n      const buttonOk = new PopupButton(\"OK\", GlobalConstants.popupConfirmValue);\n      popInfo.actions = [];\n      popInfo.actions.push(buttonOk);\n      return this.openCustomDialog(popInfo);\n    }\n\n  }\n\n  PopupService.ɵfac = function PopupService_Factory(t) {\n    return new (t || PopupService)(i0.ɵɵinject(i1.MatDialog), i0.ɵɵinject(i0.NgZone));\n  };\n\n  PopupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PopupService,\n    factory: PopupService.ɵfac,\n    providedIn: \"root\"\n  });\n  return PopupService;\n})();","map":null,"metadata":{},"sourceType":"module"}