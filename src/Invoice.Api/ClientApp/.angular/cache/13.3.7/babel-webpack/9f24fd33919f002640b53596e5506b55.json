{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./jwt.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient, jwtService) {\n      this.httpClient = httpClient;\n      this.jwtService = jwtService;\n    }\n\n    GetAll() {\n      const httpHeaders = this.jwtService.GetHttpHeaderWithTokenFromSessionStorage();\n      const url = `${environment.API_BASE_PATH}/api/User`;\n      return this.httpClient.get(url, {\n        headers: httpHeaders\n      });\n    }\n\n    Get(id) {\n      const httpHeaders = this.jwtService.GetHttpHeaderWithTokenFromSessionStorage();\n      const url = `${environment.API_BASE_PATH}/api/User/${encodeURIComponent(String(id))}`;\n      return this.httpClient.get(url, {\n        headers: httpHeaders\n      });\n    }\n\n    Post(user) {\n      const httpOptions = {\n        headers: this.jwtService.GetHttpHeaderWithTokenFromSessionStorage()\n      };\n      const url = `${environment.API_BASE_PATH}/api/User`;\n      return this.httpClient.post(url, user, httpOptions);\n    }\n\n    Update(user) {\n      const httpOptions = {\n        headers: this.jwtService.GetHttpHeaderWithTokenFromSessionStorage()\n      };\n      const url = `${environment.API_BASE_PATH}/api/User`;\n      return this.httpClient.put(url, user, httpOptions);\n    }\n\n    Patch(jsonDocument, id) {\n      const httpHeaders = this.jwtService.GetHttpHeaderWithTokenFromSessionStorage();\n      const url = `${environment.API_BASE_PATH}/api/User/PathUserById/${id}`;\n      return this.httpClient.patch(url, jsonDocument, {\n        headers: httpHeaders\n      });\n    }\n\n    Delete(id) {\n      const httpHeaders = this.jwtService.GetHttpHeaderWithTokenFromSessionStorage();\n      const url = `${environment.API_BASE_PATH}/api/User/${encodeURIComponent(String(id))}`;\n      return this.httpClient.delete(url, {\n        headers: httpHeaders\n      });\n    }\n\n    Login(username, password) {\n      const url = `${environment.API_BASE_PATH}/api/User/Login?username=${username}&password=${password}`;\n      return this.httpClient.get(url);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JWTService));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}